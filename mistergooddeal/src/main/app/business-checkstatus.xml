<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <spring:beans>
        <spring:bean id="DataBean" name="Data" class="org.enhydra.jdbc.standard.StandardXADataSource" destroy-method="shutdown">
            <spring:property name="driverName" value="org.apache.derby.jdbc.EmbeddedDriver"/>
            <spring:property name="url" value="jdbc:derby:memory:glue-database;create=true"/>
        </spring:bean>
    </spring:beans>
    <data-mapper:config name="new_mapping_grf" transformationGraphPath="new_mapping.grf" doc:name="DataMapper"/>
    <flow name="vm-business-modifyOrder" doc:name="vm-business-modifyOrder">
        <vm:inbound-endpoint exchange-pattern="request-response" path="vm/internal/handleModifyOrder" doc:name="VM"/>
        <set-variable variableName="current" value="#[message.payload]" doc:name="Current = this"/>
        <flow-ref name="sub-getStatus" doc:name="sub-getStatus"/>
        <choice doc:name="Choice">
            <when expression="#[message.payload == &quot;SHIPPED&quot;]">
                <logger message="getStatus - SHIPPED" level="INFO" doc:name="SHIPPED"/>
                <scripting:component doc:name="Return END">
                    <scripting:script engine="Groovy"><![CDATA[return "Can not modify your Command, because it is already Shipped. Sorry !";]]></scripting:script>
                </scripting:component>
            </when>
            <otherwise>
                <scripting:component doc:name="-&gt; ParamsCommand">
                    <scripting:script engine="Groovy"><![CDATA[def tpi = new internal.data.ParamsCommand();

tpi.setDeliveryAddress(flowVars['current'].deliveryAddress);
tpi.setIdCommand(flowVars['current'].idCommand);
tpi.setListProd(flowVars['current'].listProd);
tpi.setIdCustomer(flowVars['current'].idCustomer);

return tpi;]]></scripting:script>
                </scripting:component>
                <flow-ref name="sub-createNewCommand" doc:name="sub-createNewCommand"/>
                <choice doc:name="Choice">
                    <when expression="#[message.payload==&quot;-1&quot;]">
                        <logger message="Create New Command FAIL" level="INFO" doc:name="Create FAIL"/>
                        <scripting:component doc:name="Return END">
                            <scripting:script engine="Groovy"><![CDATA[return "Your new command is not possible. Sorry !";]]></scripting:script>
                        </scripting:component>
                    </when>
                    <otherwise>
                        <set-variable variableName="newIdCommand" value="#[message.payload]" doc:name="New ID Command"/>
                        <scripting:component doc:name="-&gt; Delete Params">
                            <scripting:script engine="Groovy"><![CDATA[return flowVars['current'].idCommand;
]]></scripting:script>
                        </scripting:component>
                        <flow-ref name="sub-deleteFormerCommand" doc:name="sub-deleteFormerCommand"/>
                        <scripting:component doc:name="return new ID Command">
                            <scripting:script engine="Groovy"><![CDATA[return flowVars['newIdCommand'];]]></scripting:script>
                        </scripting:component>
                    </otherwise>
                </choice>
            </otherwise>
        </choice>
    </flow>
    <flow name="vm-business-checkstatus" doc:name="vm-business-checkstatus">
        <vm:inbound-endpoint exchange-pattern="request-response" path="vm/internal/handleCheckStatus" doc:name="vm/internal/handleCheckStatus"/>
        <logger message="r&#233;cup&#233;ration de la requ&#234;te SOAP CheckStatus par l'ESB" level="INFO" doc:name="Logger"/>
        <ee:cache doc:name="Cache">
            <logger level="INFO" doc:name="Logger" message="Consulting database / #[message.payload]"/>
            <scripting:component doc:name="Groovy">
                <scripting:script engine="Groovy">if (message.payload == null || message.payload.size() == 0)
	throw new RuntimeException("No data!");

if (message.payload == "id123") {
	def info = new String();
	info = "EN PREPARATION";
	return info;
}
else if (message.payload == "idUnknown") 
	{
	def info = new String();
	info = "Id unknown";
	return info; }

</scripting:script>
            </scripting:component>
        </ee:cache>
    </flow>
    <flow doc:name="sub-getStatus" name="sub-getStatus">
        <data-mapper:transform config-ref="new_mapping_grf" doc:name="DataMapper"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[if (message.payload.idcommand == "idShipped") {
	def info = new String();
	info = "SHIPPED";
	message.payload.status = info;
return info;
	
}
else if (message.payload.idcommand == "idNotShipped") 
	{
	def info = new String();
	info = "NOTSHIPPED";
	message.payload.status = info;
return info;
	 }]]></scripting:script>
        </scripting:component>
    </flow>
    <flow doc:name="sub-createNewCommand" name="sub-createNewCommand">
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[if (message.payload.idCustomer == "createFail") {
	return "-1";
}
else {
	return "1234";
}]]></scripting:script>
        </scripting:component>
    </flow>
    <flow doc:name="sub-deleteFormerCommand" name="sub-deleteFormerCommand">
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy"><![CDATA[return "Delete Former Command - SUCCESS";]]></scripting:script>
        </scripting:component>
    </flow>
</mule>
