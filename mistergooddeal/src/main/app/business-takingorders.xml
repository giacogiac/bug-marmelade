<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:jdbc-ee="http://www.mulesoft.org/schema/mule/ee/jdbc" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.4.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <data-mapper:config name="new_mapping_1_grf" transformationGraphPath="new_mapping_1.grf" doc:name="DataMapper"/>
    <flow name="business-takingorders-fax" doc:name="business-takingorders-fax">
        <file:inbound-endpoint path="./_inputs" moveToDirectory="./src/test/resources" responseTimeout="10000" doc:name="_inputs/orders.csv"/>
        <data-mapper:transform config-ref="new_mapping_1_grf" doc:name="DataMapper"/>
        <set-variable variableName="cpt" value="0" doc:name="cpt = 0"/>
        <collection-splitter doc:name="Split"/>
        <set-variable variableName="cpt" value="#[(int) flowVars['cpt'] + 1]" doc:name="cpt++"/>
        <vm:outbound-endpoint exchange-pattern="request-response" path="/vm/internal/takingOrders" doc:name="takingOrders"/>
    </flow>
    <flow name="business-takingorders-Internet" doc:name="business-takingorders-Internet">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="8081" doc:name="HTTP"/>
        <scripting:component doc:name="http orders">
            <scripting:script engine="Groovy"><![CDATA[def ordH = new internal.data.ParamsCommand();

ordH.setIdCommand(2);
ordH.setIdCustomer(3);
ordH.setDeliveryAddress("7 Rue YYYY");
ordH.setStatu("NOTSHIPPED");
ordH.setExpectation("as soon as possible");
ordH.listProd.setName("ipadAir");
ordH.listProd.setCategory("tablette");
ordH.listProd.setCrmReference("tttt");
ordH.listProd.setPrice(500);

return ordH;]]></scripting:script>
        </scripting:component>
        <vm:outbound-endpoint exchange-pattern="request-response" path="/vm/internal/takingOrders" doc:name="takingOrders"/>
    </flow>
    <flow name="business-takingorders" doc:name="business-takingorders">
        <vm:inbound-endpoint exchange-pattern="request-response" path="/vm/internal/takingOrders" doc:name="takingOrders"/>
        <logger message="Handle #[message.payload.idCommand] / #[message.payload.idCustomer] / #[message.payload.deliveryAddress] / #[message.payload.statu] / #[message.payload.expectation] / #[message.payload.name] / #[message.payload.category] / #[message.payload.crmReference] / #[message.payload.price]" level="INFO" doc:name="Logger"/>
        <set-variable variableName="current" value="#[message.payload]" doc:name="current = this"/>
        <scripting:component doc:name="-&gt; Orders">
            <scripting:script engine="Groovy"><![CDATA[def ord = new internal.data.ParamsCommand();

ord.setIdCommand(message.payload.idCommand);
ord.setIdCustomer(message.payload.idCustomer);
ord.setDeliveryAddress(message.payload.deliveryAddress);
ord.setStatu(message.payload.statu);
ord.setExpectation(message.payload.expectation);
ord.listProd.setName(message.payload.name);
ord.listProd.setCategory(message.payload.category);
ord.listProd.setCrmReference(message.payload.crmReference);
ord.listProd.setPrice(message.payload.price);

return ord;]]></scripting:script>
        </scripting:component>
        <jdbc-ee:outbound-endpoint exchange-pattern="request-response" queryKey="add" queryTimeout="-1" connector-ref="DatabaseConnector" doc:name="INSERT INTO orders">
            <jdbc-ee:query key="add" value="INSERT INTO orders VALUES (#[message.payload.idCommand], #[message.payload.idCustomer], #[message.payload.deliveryAddress], #[message.payload.statu], #[message.payload.expectation], #[message.payload.name], #[message.payload.category], #[message.payload.crmReference], #[message.payload.price])"/>
        </jdbc-ee:outbound-endpoint>
    </flow>
</mule>
